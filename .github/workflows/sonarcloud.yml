name: Sonarcloud
on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
  workflow_run:
    workflows: ['Release', 'ReleaseDevelop']
    types:
      - completed

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: '12'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache yarn cache
        uses: actions/cache@v2
        id: cache-yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.node-version }}-nodemodules-
      - run: yarn install
      - run: yarn workspace @central-tech/api codegen
      - run: yarn workspace @central-tech/api test:coverage
      - name: Get Version
        id: get-version
        run: |
          echo ::set-output name=version::$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[\",]//g' | tr -d '[[:space:]]')
      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.organization=centraltechnology
            -Dsonar.projectKey=centraldigital_centech-api
            -Dsonar.projectVersion=${{ steps.get-version.outputs.version }}
            -Dsonar.javascript.lcov.reportPaths=packages/api/coverage/lcov.info
            -Dsonar.sources=packages/api/src
            -Dsonar.exclusions=packages/api/src/**/*.test.ts,packages/api/src/extensions/schemaV2/**/__mocks__/*,packages/api/src/dataSource/catalogService/cs-graphql.ts,src/configs/**
            -Dsonar.test.inclusions=packages/api/src/**/*.test.ts
            -Dsonar.cpd.exclusions=packages/api/src/**/__mocks__/*,packages/api/src/extensions/schemaV2/**/__mocks__/*,src/configs/**
            -Dsonar.coverage.exclusions=packages/api/src/**/__mocks__/*,packages/api/src/**/*.test.ts,packages/api/coverage/lcov-report/*,packages/api/src/extensions/schemaV2/**/__mocks__/*,src/configs/**
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
